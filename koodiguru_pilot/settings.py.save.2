"""
Django settings for koodiguru_pilot project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from django.conf import settings
from django.conf.urls.static import static
from django.urls import path, include
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent # Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY =  os.environ.get('SECRET_KEY') #"django-insecure-kl0p_s)%hdt+m%45dp7qur_$@rt@etsv+t)i(313556ex!@a-d"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = '''''''''''''''''''''''''true



ALLOWED_HOSTS = ["koodiguru.fi", "www.koodiguru.fi", "localhost", "127.0.0.1", "0.0.0.0", "run-code"]

CSRF_TRUSTED_ORIGINS = ["https://koodiguru.fi", "https://www.koodiguru.fi"]


CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "main_app",
    "ckeditor",
    'django_cron',
    'embed_video',
    'code_runner',
    'rest_framework',


]

CKEDITOR_CONFIGS = {
    "default": {
        "extraPlugins": "codesnippet",
        "toolbar": [
            ["Source", "-", "Bold", "Italic", "Underline"],
            ["Link", "Unlink", "Image", "Table", "HorizontalRule"],
            ["NumberedList", "BulletedList", "-", "Outdent", "Indent", "Blockquote"],
            ["JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock"],
            ["Styles", "Format", "Font", "FontSize"],
            ["TextColor", "BGColor"],
            ["CodeSnippet"],  # Lisää codesnippet-painike
        ],
    },
}


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "koodiguru_pilot.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "koodiguru_pilot.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


"""
import os

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('MYSQL_DATABASE', 'koodiguruDB'),
        'USER': os.environ.get('MYSQL_USER', 'pete'),
        'PASSWORD': os.environ.get('MYSQL_PASSWORD', 'oletussalasanasi'),
        'HOST': 'db',  # Docker Compose -palvelimen nimi
        'PORT': '3306',
	'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },

    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "fi"

TIME_ZONE = "Europe/Helsinki"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = "main_app.User"
LOGIN_URL = "/login/"
PROMETHEUS_EXPORT_MIGRATIONS = False


# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'koodiguruoficial@gmail.com'
EMAIL_HOST_PASSWORD = os.environ.get('GMAIL_PASSWORD')           #'cvqr jfum hsea ojbv'

CRON_CLASSES = [
    "main_app.cron.DeleteUnactivatedUsersCronJob",
    # ... mahdollisesti muita cron-luokkia ...
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
     'formatters': {  # Määritä tässä viestien formaatti
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
    },

    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/app/logs/logMessages.log',
            'encoding': 'utf-8',
            'formatter': 'standard',  # Käytä tässä määritettyä formaattia

        },
    },
    'root': {
        'handlers': ['file'],
        'level': 'INFO',
    }
}
